# –∏–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
# –∏–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–∞ –∏ –º–∞–≥–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ F
from aiogram import Router, F
# –∏–º–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ callback-–∑–∞–ø—Ä–æ—Å–∞–º–∏
from aiogram.types import Message, CallbackQuery, FSInputFile, InputMediaPhoto
# –∏–º–ø–æ—Ä—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥
from aiogram.filters import Command
# –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–≥—Ä—ã
from inline_keyboard import game_keyboard
# –∏–º–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞ –∏–≥—Ä—ã
from game_core import Game
# –∏–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from models import User, SessionLocal
# –∏–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∞—Å—Å–∏–≤–∞–º–∏
import numpy as np
# –∏–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
from game_graphic import generate_image, generate_image_classic
# –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import os

# —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
router = Router()

# —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∏–≥—Ä—ã
game = Game()


# —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
def check_game_state(field):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É (–µ—Å—Ç—å –ø–ª–∏—Ç–∫–∞ 2048)
    if 2048 in field:
        return "win"

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–ª–µ—Ç–æ–∫
    if 0 in field:
        return "continue"

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–ª—è
    size = field.shape[0]
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤
    for i in range(size):
        for j in range(size):
            current = field[i, j]
            # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö –∫–ª–µ—Ç–æ–∫ –Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–∏—è–Ω–∏—è
            if (i < size - 1 and current == field[i + 1, j]) or (j < size - 1 and current == field[i, j + 1]):
                return "continue"

    # –µ—Å–ª–∏ —Ö–æ–¥–æ–≤ –Ω–µ—Ç - –∏–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞
    return "game_over"


# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_db_session():
    session = SessionLocal()
    try:
        yield session
    finally:
        session.close()


# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
def restart_game(user_id):
    # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    session = SessionLocal()
    try:
        # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
        user = session.get(User, user_id)
        # —Å–±—Ä–æ—Å –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        game.field = np.zeros((4, 4), dtype=int)
        # —Å–±—Ä–æ—Å —Å—á–µ—Ç–∞
        game.score = 0
        # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–≤—É—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø–ª–∏—Ç–æ–∫
        game.add_new_tile()
        game.add_new_tile()
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.field = game.field.tolist()
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.score = int(game.score)
        # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        session.commit()
        # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        if user.theme == 'classic':
            generate_image_classic(game.field, 4, f'{user_id}.png')
        else:
            generate_image(game.field, 4, f'{user_id}.png')
        # –≤–æ–∑–≤—Ä–∞—Ç —Ä–µ–∫–æ—Ä–¥–∞ –∏ —Ç–µ–º—ã
        return user.height_score, user.theme
    finally:
        # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏
        session.close()


# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ö–æ–¥–∞
def chat_move(message, direction):
    game_state = "continue"
    high_score = 0
    theme = 'classic'
    # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    session = SessionLocal()
    try:
        # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
        user = session.get(User, message.from_user.id)
        # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        game.field = np.array(user.field)
        # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        game.score = user.score
        theme = user.theme
        # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–ø–∏–∏ –ø–æ–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        shot_field = game.field.copy()

        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö
        if direction == 1:
            game.field = game.field.T
            game._left()
            game.field = game.field.T
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ø—Ä–∞–≤–æ
        elif direction == 2:
            game.field = np.fliplr(game.field)
            game._left()
            game.field = np.fliplr(game.field)
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ª–µ–≤–æ
        elif direction == 3:
            game._left()
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –≤–Ω–∏–∑
        elif direction == 4:
            game.field = game.field.T
            game.field = np.fliplr(game.field)
            game._left()
            game.field = np.fliplr(game.field)
            game.field = game.field.T

        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª—è –ø–æ—Å–ª–µ —Ö–æ–¥–∞
        if not np.array_equal(shot_field, game.field):
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–ª–∏—Ç–∫–∏ –µ—Å–ª–∏ –ø–æ–ª–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
            game.add_new_tile()
            # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
            game_state = check_game_state(game.field)

        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.field = game.field.tolist()
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user.score = int(game.score)
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–æ—Ä–¥–∞ –µ—Å–ª–∏ —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –±–æ–ª—å—à–µ
        if user.score > user.height_score:
            user.height_score = user.score
        high_score = user.height_score
        # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        session.commit()
        # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        if theme == 'classic':
            generate_image_classic(game.field, 4, f'{message.from_user.id}.png')
        else:
            generate_image(game.field, 4, f'{message.from_user.id}.png')

    finally:
        # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏
        session.close()

    # –≤–æ–∑–≤—Ä–∞—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã, —Ä–µ–∫–æ—Ä–¥–∞ –∏ —Ç–µ–º—ã
    return game_state, high_score, theme


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(Command('start'))
async def start(message):
    # —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    session = SessionLocal()
    try:
        # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–≥—Ä—ã
        keyboard = game_keyboard()
        # –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
        user = session.get(User, message.from_user.id)

        # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if user is None:
            user = User(
                id=message.from_user.id,
                username=message.from_user.username,
                score=0,
                field=np.zeros((4, 4), dtype=int).tolist(),
                height_score=0,
                theme='classic'
            )
            # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
            game.field = np.zeros((4, 4), dtype=int)
            game.score = 0
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–≤—É—Ö –Ω–∞—á–∞–ª—å–Ω—ã—Ö –ø–ª–∏—Ç–æ–∫
            game.add_new_tile()
            game.add_new_tile()
            # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.field = game.field.tolist()
            # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user.score = int(game.score)
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Å—Å–∏—é
            session.add(user)
            # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π
            session.commit()
        else:
            # –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            game.field = np.array(user.field)
            game.score = user.score

        # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–º—ã
        if user.theme == 'classic':
            generate_image_classic(game.field, 4, f'{message.from_user.id}.png')
        else:
            generate_image(game.field, 4, f'{message.from_user.id}.png')

        # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
        theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if user.theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
        caption = f'Score: {game.score}\nHigh Score: {user.height_score}\n–¢–µ–º–∞: {theme_name}'
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
        game_state = check_game_state(game.field)
        if game_state == "win":
            caption += "\nüéâüéâüéâ–ü–æ–±–µ–¥–∞, —á–µüéâüéâüéâ"
        elif game_state == "game_over":
            caption += "\nüíÄüíÄüíÄ–ì–ì! –°–õ–ò–¢!üíÄüíÄüíÄ"

        # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        photo = FSInputFile(path=os.path.join('uploads', f'{message.from_user.id}.png'))
        # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await message.answer_photo(photo=photo, caption=caption, reply_markup=keyboard)
    finally:
        # –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Å—Å–∏–∏
        session.close()


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –≤–≤–µ—Ä—Ö
@router.callback_query(F.data == 'move_up')
async def chat_move_up(callback_query: CallbackQuery):
    # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    keyboard = game_keyboard()
    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–æ–¥–∞
    game_state, high_score, theme = chat_move(callback_query, 1)
    # –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è callback
    await callback_query.answer()

    # —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏
    theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
    caption = f'Score: {game.score}\nHigh Score: {high_score}\n–¢–µ–º–∞: {theme_name}'
    if game_state == "win":
        caption += "\nüéâüéâüéâ–ü–æ–±–µ–¥–∞, —á–µüéâüéâüéâ"
    elif game_state == "game_over":
        caption += "\nüíÄüíÄüíÄ–ì–ì! –°–õ–ò–¢!üíÄüíÄüíÄ"

    # —Å–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
    # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=photo,
            caption=caption
        ),
        reply_markup=keyboard
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ø—Ä–∞–≤–æ
@router.callback_query(F.data == 'move_right')
async def chat_move_right(callback_query: CallbackQuery):
    keyboard = game_keyboard()
    game_state, high_score, theme = chat_move(callback_query, 2)
    await callback_query.answer()

    theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
    caption = f'Score: {game.score}\nHigh Score: {high_score}\n–¢–µ–º–∞: {theme_name}'
    if game_state == "win":
        caption += "\nüéâüéâüéâ–ü–æ–±–µ–¥–∞, —á–µüéâüéâüéâ"
    elif game_state == "game_over":
        caption += "\nüíÄüíÄüíÄ–ì–ì! –°–õ–ò–¢!üíÄüíÄüíÄ"

    photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=photo,
            caption=caption
        ),
        reply_markup=keyboard
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –≤–ª–µ–≤–æ
@router.callback_query(F.data == 'move_left')
async def chat_move_left(callback_query: CallbackQuery):
    keyboard = game_keyboard()
    game_state, high_score, theme = chat_move(callback_query, 3)
    await callback_query.answer()

    theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
    caption = f'Score: {game.score}\nHigh Score: {high_score}\n–¢–µ–º–∞: {theme_name}'
    if game_state == "win":
        caption += "\nüéâüéâüéâ–ü–æ–±–µ–¥–∞, —á–µüéâüéâüéâ"
    elif game_state == "game_over":
        caption += "\nüíÄüíÄüíÄ–ì–ì! –°–õ–ò–¢!üíÄüíÄüíÄ"

    photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=photo,
            caption=caption
        ),
        reply_markup=keyboard
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–∏–∂–µ–Ω–∏—è –≤–Ω–∏–∑
@router.callback_query(F.data == 'move_down')
async def chat_move_down(callback_query: CallbackQuery):
    keyboard = game_keyboard()
    game_state, high_score, theme = chat_move(callback_query, 4)
    await callback_query.answer()

    theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
    caption = f'Score: {game.score}\nHigh Score: {high_score}\n–¢–µ–º–∞: {theme_name}'
    if game_state == "win":
        caption += "\nüéâüéâüéâ–ü–æ–±–µ–¥–∞, —á–µüéâüéâüéâ"
    elif game_state == "game_over":
        caption += "\nüíÄüíÄüíÄ–ì–ì! –°–õ–ò–¢!üíÄüíÄüíÄ"

    photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=photo,
            caption=caption
        ),
        reply_markup=keyboard
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã
@router.callback_query(F.data == 'restart')
async def chat_restart(callback_query: CallbackQuery):
    keyboard = game_keyboard()
    # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
    high_score, theme = restart_game(callback_query.from_user.id)
    # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await callback_query.answer("–ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!")

    theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
    caption = f'Score: {game.score}\nHigh Score: {high_score}\n–¢–µ–º–∞: {theme_name}\n–ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!'

    photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
    await callback_query.message.edit_media(
        media=InputMediaPhoto(
            media=photo,
            caption=caption
        ),
        reply_markup=keyboard
    )


# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —Ç–µ–º—ã
@router.callback_query(F.data == 'change_theme')
async def chat_change_theme(callback_query: CallbackQuery):
    keyboard = game_keyboard()

    session = SessionLocal()
    try:
        user = session.get(User, callback_query.from_user.id)
        # –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
        if user.theme == 'classic':
            user.theme = 'bw'
        else:
            user.theme = 'classic'

        # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–æ–≤–æ–π —Ç–µ–º–µ
        if user.theme == 'classic':
            generate_image_classic(np.array(user.field), 4, f'{callback_query.from_user.id}.png')
        else:
            generate_image(np.array(user.field), 4, f'{callback_query.from_user.id}.png')

        session.commit()

        theme_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è" if user.theme == 'classic' else "—á–µ—Ä–Ω–æ-–±–µ–ª–∞—è"
        # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await callback_query.answer(f"–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {theme_name}")

        caption = f'Score: {user.score}\nHigh Score: {user.height_score}\n–¢–µ–º–∞: {theme_name}'

        photo = FSInputFile(path=os.path.join('uploads', f'{callback_query.from_user.id}.png'))
        # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤–æ–π —Ç–µ–º–æ–π
        await callback_query.message.edit_media(
            media=InputMediaPhoto(
                media=photo,
                caption=caption
            ),
            reply_markup=keyboard
        )
    finally:
        session.close()